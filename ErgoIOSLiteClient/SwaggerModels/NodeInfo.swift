//
// NodeInfo.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct NodeInfo: Codable {

    public enum StateType: String, Codable {
        case digest = "digest"
        case utxo = "utxo"
    }

    public var name: String

    public var appVersion: String

    /** Can be &#x27;null&#x27; if state is empty (no full block is applied since node launch) */
    public var fullHeight: Int?

    /** Can be &#x27;null&#x27; if state is empty (no header applied since node launch) */
    public var headersHeight: Int?

    /** Can be &#x27;null&#x27; if no full block is applied since node launch */
    public var bestFullHeaderId: String?

    /** Can be &#x27;null&#x27; if no full block is applied since node launch */
    public var previousFullHeaderId: String?

    /** Can be &#x27;null&#x27; if no header applied since node launch */
    public var bestHeaderId: String?

    /** Can be &#x27;null&#x27; if state is empty (no full block is applied since node launch) */
    public var stateRoot: String?
    public var stateType: StateType?

    /** Can be &#x27;null&#x27; if no full block is applied since node launch */
    public var stateVersion: String?

    public var isMining: Bool?

    /** Number of connected peers */
    public var peersCount: Int?

    /** Current unconfirmed transactions count */
    public var unconfirmedCount: Int?

    /** Difficulty on current bestFullHeaderId. Can be &#x27;null&#x27; if no full block is applied since node launch */
    public var difficulty: Int?

    /** Current internal node time */
    public var currentTime: Int?

    /** Time when the node was started */
    public var launchTime: Int?

    /** Can be &#x27;null&#x27; if no headers is applied since node launch */
    public var headersScore: Int?

    /** Can be &#x27;null&#x27; if no full block is applied since node launch */
    public var fullBlocksScore: Int?

    /** Can be &#x27;null&#x27; if genesis blocks is not produced yet */
    public var genesisBlockId: String?

    public var parameters: Parameters?
    public init() {
        self.name = "Test node"
        self.appVersion = "3.2.0"
        self.fullHeight = 100
        self.headersHeight = 100
    }
    public init(name: String, appVersion: String, fullHeight: Int, headersHeight: Int) {
        self.name = name
        self.appVersion = appVersion
        self.fullHeight = fullHeight
        self.headersHeight = headersHeight
    }
    public init(name: String, appVersion: String, fullHeight: Int, headersHeight: Int, bestFullHeaderId: String, previousFullHeaderId: String, bestHeaderId: String, stateRoot: String, stateType: StateType, stateVersion: String, isMining: Bool, peersCount: Int, unconfirmedCount: Int, difficulty: Int, currentTime: Int, launchTime: Int, headersScore: Int, fullBlocksScore: Int, genesisBlockId: String, parameters: Parameters) {
        self.name = name
        self.appVersion = appVersion
        self.fullHeight = fullHeight
        self.headersHeight = headersHeight
        self.bestFullHeaderId = bestFullHeaderId
        self.previousFullHeaderId = previousFullHeaderId
        self.bestHeaderId = bestHeaderId
        self.stateRoot = stateRoot
        self.stateType = stateType
        self.stateVersion = stateVersion
        self.isMining = isMining
        self.peersCount = peersCount
        self.unconfirmedCount = unconfirmedCount
        self.difficulty = difficulty
        self.currentTime = currentTime
        self.launchTime = launchTime
        self.headersScore = headersScore
        self.fullBlocksScore = fullBlocksScore
        self.genesisBlockId = genesisBlockId
        self.parameters = parameters
    }

}
